<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[CODELAND]]></title>
  <link href="http://codelandev.github.io/atom.xml" rel="self"/>
  <link href="http://codelandev.github.io/"/>
  <updated>2014-07-09T09:19:56-03:00</updated>
  <id>http://codelandev.github.io/</id>
  <author>
    <name><![CDATA[CODELAND]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Aumentando a Usabilidade]]></title>
    <link href="http://codelandev.github.io/blog/2014/07/09/aumentando-a-usabilidade/"/>
    <updated>2014-07-09T09:02:55-03:00</updated>
    <id>http://codelandev.github.io/blog/2014/07/09/aumentando-a-usabilidade</id>
    <content type="html"><![CDATA[<p>A melhor forma de testar a usabilidade de um software é usando-o. Não tenha dúvida: esse trabalho exigirá tempo para experenciar as dificuldades que aparecerão para a pessoa usando o sistema. E sim, existe uma ISO definindo usabilidade!</p>

<!-- more -->




<blockquote><p>[…] the extent to which a product can be used by specified users to achieve specified goals with effectiveness, efficiency and satisfaction in a specified context of use.</p></blockquote>


<p>Em uma tradução livre, se refere à possibilidade de determinados usuários alcançarem objetivos específicos com efetividade, eficiência e satisfação em um determinado contexto. Resumo da história: aumentar a usabilidade é tornar o uso de algo mais natural. Deste modo, o usuário passa a não ter dificuldades em aprender ou executar uma função. No contexto de software, é completar uma ação no sistema.</p>

<p>Em uma tradução livre, se refere à possibilidade de determinados usuários alcançarem objetivos específicos com efetividade, eficiência e satisfação em um determinado contexto. Resumo da história: aumentar a usabilidade é tornar o uso de algo mais natural. Deste modo, o usuário passa a não ter dificuldades em aprender ou executar uma função. No contexto de software, é completar uma ação no sistema.</p>

<p><img class="center" src="http://codelandev.github.io/images/ux.png"></p>

<p>Nessa hora, vale mais do que nunca o princípio KISS, que sempre valoriza a simplicidade como forma de descomplicar processos. Com poucos objetos na tela, descobrir problemas se torna mais fácil. Por exemplo: você consegue enxergar linhas invisíveis ligando início e fim de cada elemento? Esse é o primeiro requisito do design que não tem a premissa de ser desconfortável ao usuário. Ele pode não saber o que está errado, mas se sentirá confuso ao tentar ler ou encontrar uma determinada opção. Grids são essenciais em qualquer tela, seja web, mobile ou desktop.</p>

<p>Depois de desenvolvida, você pode abrir o site com calma e se perguntar: é agradável de se ver? De uma lista de todas as ações possíveis do sistema, qual é o número máximo de cliques exigidos para executar cada uma delas partindo da tela inicial? Qual a frequência que ela é executada? Existe algum modo de encurtar esse caminho sem adicionar elementos na interface? E, por fim, seu usuário acha esse processo fácil o suficiente para que olhe para a tela e saiba onde ir para executar o que precisa?</p>

<hr>


<br>


<p>Esse post foi uma contribuição de <a href="http://br.linkedin.com/in/iriomk" target="_blank">Irio Musskopf</a>. Irio é engenheiro de software na <a href="http://neighbor.ly" target="_blank">Neighbor.ly</a>, e você pode encontrar mais sobre ele em seu <a href="https://twitter.com/irio" target="_blank">Twitter</a> ou <a href="https://github.com/Irio" target="_blank">Github</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Seu Preço Conta Uma História]]></title>
    <link href="http://codelandev.github.io/blog/2014/06/24/seu-preco-conta-uma-historia/"/>
    <updated>2014-06-24T10:56:07-03:00</updated>
    <id>http://codelandev.github.io/blog/2014/06/24/seu-preco-conta-uma-historia</id>
    <content type="html"><![CDATA[<p>Um dos aspectos mais legais de vendas é o fator do preço. Todos os preços são maleáveis e arbitrários, e podemos fazer basicamente o que bem entendermos quando estamos decidindo o que cobrar por algo. Quer vender uma garrafa de água por 10 milhões? Você pode. Se você quiser reduzir ou dobrar esse preço uma semana depois, nada vai lhe parar. Qualquer preço pode ser definido para qualquer nível, sem limitações. Todo o caso, existem alguns aspectos que precisamos prestar atenção quando definimos um preço para nossos produtos ou serviços, e um deles é a história que estamos contando para nossos clientes.</p>

<!-- more -->


<p>Sua oferta como um todo tem o papel principal no palco &ndash; clientes não vão comprar um produto ou um serviço. Clientes vão comprar uma história. O preço que você escolhe para a sua oferta vai ajudar a moldar essa história. Louis Moinet pode cobrar milhões em um relógio que é construído com componentes extremamente raros e históricos. No mesmo lugar, a Adidas não pode fazer o mesmo com um relógio comum de esportes. Todo o caso, ninguém compraria um relógio por milhões sem saber porque o preço é tão alto. Além de ter seu público em mente quando definir seu preço, você precisa poder apoiar o seu preço com uma boa história.</p>

<p>Poder apoiar o preço que você está pedindo antes que um cliente real aceite sua oferta é mandatório. Forneça um motivo se você espera que as pessoas paguem um bom dinheiro pelo que você está oferecendo. Uma vez que você sabe o valor real que você está entregando aos seus clientes, será muito mais fácil até mesmo ajustar o seu discurso de vendas, como você vai começar a trabalhar com vendas baseadas em valor. Você entende e reforça o motivo pelo qual aquela transação vai ser valiosa para o seu cliente. Dessa maneira você pode ao mesmo tempo aumentar a probabilidade da transação e também o preço que o comprador estará disposto a pagar.</p>

<p>Se você quiser aumentar seu preço, aumente o seu valor e conte uma história melhor. Não há nada mais perigoso do que constantemente reduzir seu preço para que você possa vender mais. É uma corrida para o fundo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pare De Fazer Marketing Como Se Estivéssemos Em 2008]]></title>
    <link href="http://codelandev.github.io/blog/2014/06/13/pare-de-fazer-marketing-como-se-estivessemos-em-2008/"/>
    <updated>2014-06-13T10:36:26-03:00</updated>
    <id>http://codelandev.github.io/blog/2014/06/13/pare-de-fazer-marketing-como-se-estivessemos-em-2008</id>
    <content type="html"><![CDATA[<p>Se você trabalha com marketing, já deve estar ouvindo há um tempo toda a conversa sobre como mídias sociais seriam o próximo grande passo para a propaganda. 3 ou 4 anos atrás, as pessoas começaram a se auto intitular &ldquo;gurus das mídias sociais&rdquo; e começaram a se perguntar qual o ROI dessas plataformas. Todo o caso, existem profissionais fazendo o seu trabalho nesses lugares como se ainda estivéssemos naquela época.</p>

<!-- more -->




<h2>Cada plataforma tem a sua própria linguagem, público e modo de uso</h2>


<p>Um dos maiores problemas que vejo marcas fazendo em suas redes sociais é criar propagandas nesses lugares como se estivessem criando propagandas impressas ou em mídias tradicionais. Elas precisam entender que a maior parte do que vai online como essa forma de propaganda é completamente ignorada por usuários.</p>

<p>Uma universidade americana fez um experimento com crianças de 12 a 16 anos que não conseguiam prestar atenção na barra lateral direita de um website comum. Crianças crescendo no mundo em que vivemos hoje treinam o seu cérebo para ignorar a parte direita de um website. Pelo fato de que eles cresceram usando o Facebook, eles sabem que a barra lateral direita é onde ficam os anúncios, então eles a ignoram completamente.</p>

<p>Você não pode fazer marketing no Twitter da mesma maneira que faz no Facebook. O mesmo caso se aplica para o Instagram, Vine, Pinterest e assim por diante. Você precisa se misturar com o público nessas plataformas, encontrar o contexto. Dessa maneira você conseguirá entender a sua mentalidade, as coisas que eles esperam desses lugares. E então, só então, você vai conseguir se destacar no meio de todo o barulho. Você precisa se misturar para conseguir se destacar.</p>

<h2>Dê, então peça</h2>


<p>Gary Vaynerchuk, um dos empreendedores mais respeitados dessa década, têm um livro fantástico cobrindo esse ponto. Ele diz que para pedir alguma coisa nas mídias sociais, você precisa dar algo em troca primeiro. Tudo isso se enquadrando no contexto certo.</p>

<p>Então, seja isso conteúdo, conselho, freebies, ou o que seja, você precisa entregar valor para as pessoas antes de pedir por algo. Eu coloquei isso em prática e me encontrei em uma posição muito mais vantajosa quando peço por algo. Ao invés de ser a pessoa que posta &ldquo;clique aqui&rdquo;, &ldquo;compre isso&rdquo;, você cria um senso de necessidade no seu público, de uma maneira que eles dificilmente não vão fazer algo por você, porque você os deu tanto valor de antemão.</p>

<h2>Em qual plataforma eu devo estar?</h2>


<p>Frequentemente vejo marcas querendo estar em todos os lugares na internet. Quanto mais melhor, certo? Nem tanto.</p>

<p>Como eu disse antes, para que você seja relevante em uma plataforma, você precisa entender o contexto por trás dela. A mentalidade dos usuários. Isso por si só já é um desafio grande o suficiente para espantar você da maioria delas. Todo o caso, existe também a questão do público com quem você estará lidando.</p>

<p>Se você está vendendo para idosos de 60 anos que estão se aposentando, você provavelmente não vai querer fazer isso no Snapchat. E se você está vendendo para vovós de 70 anos, você provavelmente não vai querer vender no Instagram. Não diretamente ao menos.</p>

<p>Por outro lado, se você olhar os dados, podem existir grandes oportunidades em basicamente todas essas plataformas. Nos Estados Unidos, os dados provam que mães de 30 a 40 anos estão cada vez mais comprando baseadas nos hábitos de consumo das suas filhas. A &ldquo;juvenização&rdquo; da sociedade defnitivamente está acontecendo por lá, então marcas estão começando a fazer propagandas para suas filhas de 15 anos no Snapchat, para que possam alcançar as suas mães. É bem doido, não é?</p>

<p>Antes de criar um perfil em qualquer rede, faça sua pesquisa de público antes. Meça se existe alguém lá que está disposto a ouvir as coisas que você têm a dizer.</p>

<h2>A importância da voz</h2>


<p>Quando você tirar tempo para entrar em uma nova plataforma, é importante usá-la por um período para encontrar em qual contexto você pode inserir seu conteúdo por lá. Uma outra coisa que é ainda mais difícil é a habilidade de manter a sua voz através de todos esses lugares. Você precisa trocar o contexto, trabalhar no seu jogo de palavras, mas sempre manter uma linha entre todos esses lugares.</p>

<p>Quando você começar a usar diferentes canais sociais, certamente vai se deparar com esse desafio. Uma <a href="http://blog.codeland.com.br/blog/2013/10/26/a-funcao-das-palavras/" target="_blank">voz bem definida</a> deve ajudar a fazer as coisas um tanto quanto mais fáceis para você.</p>

<p>Tenho certeza que não cobrei todos os pontos que fazem com o marketing moderno uma ferramente eficaz. Isso é um ponto inicial para conversarmos sobre como podemos fazer o processo de venda nessas plataformas parecer mais natural e menos irritante para os usuários.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[O Que Todos Deveriam Saber Sobre Começar Uma Empresa]]></title>
    <link href="http://codelandev.github.io/blog/2014/05/26/o-que-todos-deveriam-saber-sobre-comecar-uma-empresa/"/>
    <updated>2014-05-26T15:42:01-03:00</updated>
    <id>http://codelandev.github.io/blog/2014/05/26/o-que-todos-deveriam-saber-sobre-comecar-uma-empresa</id>
    <content type="html"><![CDATA[<p>Você pode encontrar muito conteúdo online sobre como começar uma empresa. Desde posts técnicos até motivacionais, existem várias boas leituras nesse assunto. De qualquer maneira, existem alguns pontos básicos que eu sinto que não são cobertos da maneira em que eu acredito. Aqui listo alguns deles.</p>

<!-- more -->




<h2>1. Eu posso ser um empreendedor?</h2>


<p>O empreendedorismo é para mim? Será que consigo fazer? Eu tenho o DNA?</p>

<p>Acho isso bem engraçado. A verdade é que você nunca vai poder saber se você consegue ser empredeedor ou não até que você seja um. Você pode ler tudo sobre, pode falar com quantas pessoas puder, mas quando você começar a empreender, ver e sentir todas essas coisas que você leu e conversou sobre, só então vai conseguir saber como é.</p>

<h2>2. Tenha um propósito</h2>


<p>Pessoas começam empresas por vários motivos diferentes. Alguns querem autoridade em suas vidas. Alguns querem flexibilidade nos seus horários. Alguns estão fazendo pelo dinheiro. Podem ter vários, mesmo. Mas no meio de todos esses, existe um que triunfa sobre todos os outros: ter um propósito.</p>

<p>Se você está no jogo para ter um sentido na vida das pessoas, e de alguma maneira mudar o mundo, mesmo que um pouco, você tem uma motivação poderosa por trás. É importante que você sempre saiba como responder essa pergunta: Se a sua empresa fechasse as portas amanhã, como o mundo seria um lugar pior, mesmo na menor escala?</p>

<h2>3. Missão da empresa</h2>


<p>Não tente criar uma declaração da missão da sua empresa. Elas são muito vagas, e na maioria das vezes a verdade é que ninguém vai prestar atenção nesse ponto. Na sua última lição do SkillShare, Guy Kawasaki fala sobre criar um mantra ao invés disso. Descobri que isso funciona bem melhor.</p>

<p>Crie um mantra que define o por que sua empresa deve existir. Com apenas 4 palavras, mantenha ele claro e conciso. Ele deve ser o seu principal guia quando estiver montando um novo produto ou serviço. Aqui estão alguns exemplos de marcas conhecidas mundialmente:</p>

<p>&ldquo;Autêntico, atlético, performance&rdquo; &ndash; Nike</p>

<p>&ldquo;Democratizando informação&rdquo; &ndash; Google</p>

<p>&ldquo;Democratizando computadores&rdquo; &ndash; Apple</p>

<h2>4. Não se preocupe em ter um produto completo incialmente</h2>


<p>Por que perder tempo com pesquisa de mercado quando você pode simplismente sair do prédio com a sua ideia e testar o mais cedo que puder? Eu já falei sobre <a href="http://blog.codeland.com.br/blog/2013/10/22/as-vantagens-de-comecar-pequeno/" target="_blank">as vantagens de começar pequeno</a> por aqui. É um ponto tão crucial que pode fazer você começar mais rápido e arriscar bem menos no processo. Quanto falo de um produto mínimo, não quero dizer um produto sem qualidade, ou feito de qualquer maneira. Mas sim um produto que vai conseguir testar as suas hipóteses no mercado.</p>

<p>O trabalho que fazemos na CODELAND de <a href="http://startups.codeland.com.br" target="_blank">lançar um MVP em apenas duas semanas</a>, com um trabalho não só de construção de software, mas também de modelagem de negócio, é justamente para isso &ndash; lançar um produto de forma rápida, reduzindo ao máximo o investimento do empreendedor.</p>

<p>Não tenha medo de mostrar o seu projeto ao mundo. Nenhum produto sobrevive o primeiro contato com o mercado, e alguma coisa em sua ideia provavelmente vai mudar ao longo do caminho. Se concentre nas funcionalidades que as pessoas gostam.</p>

<h2>5. Se importe com os seus clientes</h2>


<p>Isso pode parecer básico demais, mas acredite ou não, se você está se importando com seus clientes, você está um passo a frente. Eu fico abismado por quão mal empresas tratam os seus clientes em potencial.</p>

<p>Sempre se lembre que pessoas tomam decisões com seus coracões, e que sua relação com seus clientes deve ser uma relação de afeto. Plante muitas sementes, mesmo se o motivo não parecer claro nesse momento. Você pode colher bons frutos disso no futuro.</p>

<h2>Por último, goste do que você está fazendo</h2>


<p>Se você vai começar uma empresa, você está prestes a se deparar com uma quantidade enorme de trabalho. Agora, se você está fazendo algo que não acredita profundamente e não gosta, por que começar a fazer?</p>

<p>No processo, haverá alegria, mas também haverá muita dor. E quando você começar, você não pode ter medo de errar. Se você tiver, é o fim do jogo. Não pare. Pense grande, e começar vai ser só o primeiro passo para causar impacto no mundo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Liderança Constrói a Segurança]]></title>
    <link href="http://codelandev.github.io/blog/2014/05/20/a-lideranca-constroi-a-seguranca/"/>
    <updated>2014-05-20T10:07:15-03:00</updated>
    <id>http://codelandev.github.io/blog/2014/05/20/a-lideranca-constroi-a-seguranca</id>
    <content type="html"><![CDATA[<p>Outro dia eu estava assistindo uma palestra do TED, onde Simon Sinek estava falando sobre a sua perspectiva de liderança. Quanto mais eu assistia, mais eu me espantava em como o líder corporativo erra completamente o propósito de liderar um time para chegar em um objetivo em comum.</p>

<p>Quando Simon perguntou a líderes reconhecidos por que eles fazem as coisas que fazem pelo seu pessoal, como um soldado arriscar a própria vida para trazer seus companheiros feridos para um lugar mais seguro, todos vieram com a mesma resposta.</p>

<!-- more -->


<p>&ldquo;Eu faço porque eles fariam o mesmo por mim.&rdquo;</p>

<p>Liderança de verdade é fazer as pessoas se sentirem seguras. Não é bastante óbvio quando partimos daqui? Para um líder se tornar um bom líder, ele deve começar a se sacrificar pelo seu pessoal. Não o contrário, onde um empregado é colocado a correr riscos para que o líder possa continuar seguro em seu emprego. E isso é pelo menos 80% dos casos lá fora.</p>

<p>Existe perigo por aí &ndash; em um ambiente de trabalho, muita coisa pode fazer com que fiquemos improdutivos ou preocupados. O trabalho principal de um líder é de proteger seu time dessas coisas, para que eles possam se sentir seguros.</p>

<p>Gosto muito da comparação que Simon faz sobre com o que ótimos líderes se parecem, e é bem fácil de entender quando colocamos dessa maneira: Um ótimo líder se parece muito com um pai. Um pai quer que seus filhos recebam educação, que sejam bem cuidados, e querem ajudá-los a chegarem cada vez mais alto em suas vidas. Também existirão horas em que o pai vai ter que ter pulso firme. Isso ilustra muito bem o papel de um líder dentro de uma empresa. E as vezes esse líder não está nem em um cargo de gerência.</p>

<p>Muitas vezes eu me encontro surpreso em como isso não foi percebido pela maioria das pessoas que deveriam tomar esse papel. Na verdade, talvez eles tenham percebido. Mas para tomar esse papel da forma correta, essa pessoa deve começar a pegar os riscos com as suas próprias mãos. Talvez essa pessoa queira continuar onde está para se sentir seguro &ndash; jogando esses riscos nas mãos de outras pessoas.</p>

<p>Se você está em um cargo de liderança, por favor, considere isso. Grandes coisas acontecerão se você começar a tomar os riscos para si e fazer com que as pessoas na sua volta se sintam seguras. Mais cedo do que você pensa, essas pessoas vão seguí-lo e escutá-lo mesmo se eles não fossem instruídos a fazer isso.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lista De Startups Em Fase Beta Ajuda Empreendedores E Investidores a Conhecerem as Novas Empresas Do Brasil]]></title>
    <link href="http://codelandev.github.io/blog/2014/03/31/lista-de-startups-em-fase-beta-ajuda-empreendedores-e-investidores-a-conhecerem-as-novas-empresas-do-brasil/"/>
    <updated>2014-03-31T11:19:04-03:00</updated>
    <id>http://codelandev.github.io/blog/2014/03/31/lista-de-startups-em-fase-beta-ajuda-empreendedores-e-investidores-a-conhecerem-as-novas-empresas-do-brasil</id>
    <content type="html"><![CDATA[<p>O boom de empreendedorismo no Brasil é bastante recente. Isso trouxe diversas novas necessidades que antes não existiam, ou mesmo que alguém imaginava que poderiam existir. Muitas dessas necessidades acabam sendo espelhadas em soluções criados em outros países que já passaram por essa fase pela qual estamos indo. Foi partindo de uma dessas necessidades que nós criamos o <a href="http://www.listabeta.com.br" target="_blank"> LISTABETA</a>, um diretório nacional de novas startups em fase inicial. A <a href="http://www.codeland.com.br" target="_blank"> CODELAND</a> é uma empresa de desenvolvimento de software que sempre teve muita proximidade com a criação de novos negócios digitais. E a necessidade acabou vindo de nossos próprios clientes. Uma vez que tinham seu projeto pronto, existia essa dificuldade em saber como conseguir seus primeiros usuários. Veja bem, nossa ideia não é ser uma empresa de produtos próprios. Não acreditamos que uma equipe possa oferecer serviços e produtos ao mesmo tempo de forma excepcional. Algum lado vai pecar e acabar prejudicando o outro. Mas mesmo assim,  estamos diretamente envolvidos com a comunidade de startups gaúcha e brasileira. Gostamos de criar ações e ferramentas que possam ajudar diretamente na criação de novos negócios, e é por isso que, junto do StartupNews, resolvemos criar o <a href="http://www.listabeta.com.br" target="_blank"> LISTABETA</a>.</p>

<!-- more -->


<p>Lá empreendedores podem cadastrar suas startups em fase beta, e todo cadastro é enviado para a nossa base de inscritos. Essa base teve a entrada de pessoas importantes do meio no final de 2013 e no início de 2014, e continua crescendo a cada dia, afinal é a maneira mais fácil e rápida de ficar sabendo de novas startups que aparecem pelo Brasil. Para os empreendedores, é uma ótima maneira de conseguir os primeiros usuários, porque dentro desses inscritos estão intusiastas de tecnologias e internet que têm muita vontade de testar novos produtos. E tudo isso é de graça. Nosso objetivo sempre foi muito claro: ajudar a comunidade. A partir do momento que cobramos para o empreendedor ter exposição nessa fase do negócio, onde muitas vezes ainda não existe fluxo de dinheiro, seria injusto. Queremos incentivar o empreendedor a testar a sua ideia o quanto antes e com o mínimo de investimento possível. O <a href="http://www.listabeta.com.br" target="_blank"> LISTABETA</a> pode ser uma ótima primeira prova de fogo. Assim que a startup for divulgada, os nossos usuários poderão dar feedback sobre a sua proposta. E como <a href="http://blog.codeland.com.br/blog/2013/10/22/as-vantagens-de-comecar-pequeno/" target="_blank">já comentamos por aqui</a>, o feedback inicial é valioso demais.</p>

<p>O principal chamativo do serviço para as startups cadastradas acaba sendo as pessoas que vão receber nossa newsletter com as startups da semana. Isso nos fez ir atrás de pessoas chave do ecossistema, para fazer com que eles voltem seus olhos para esse e-mail. Não é interessante para o empreendedor colocar o seu negócio em exposição se não existe ninguém lá para ver, então enquanto ela continua a crescer, também estamos buscando com que ícones da comunidade façam parte da lista. O mais interessante é que a aceitação e o retorno desses e-mails têm sido tremenda para as startups selecionadas. Empreendedores já vieram nos mostrar o gráfico de conversões do site no período em que eles foram expostos em nossa newsletter, e os resultados realmente são muito bacanas. Pouco a pouco, o <a href="http://www.listabeta.com.br" target="_blank"> LISTABETA</a> está conseguindo se tornar aquilo para que foi criado: ser a vitrine brasileira de startups em fase inicial.</p>

<p>Queremos poder ajudar cada vez mais, então temos algumas novidades muito legais para a caminho. Enquanto escrevo esse post, estamos preparando para lançar dentro do <a href="http://www.listabeta.com.br" target="_blank"> LISTABETA</a> o Startup Pack. Ofereceremos um pacote de descontos em serviços e produtos ótimos para uma startup (muitos desses serviços utilizamos na própria CODELAND). É uma maneira de levar o seu negócio ao próximo nível, facilitar a escolha do empreendedor, e também de mostrar que pode se gerenciar uma pequena empresa com pouco dinheiro. Esses descontos já estão sendo testados com algum usuários, e o resultado têm sido bastante positivo.</p>

<p>Sabemos o quanto é importante para todos essa mentalidade de inovação e de resolver problemas reais do mundo que está em volta das startups, e por isso queremos fazer tudo que está ao nosso alcanse para ajudar a comunidade a se desenvolver cada vez mais. O LISTABETA está se saindo muito bem até agora, e estamos muito contentes com o resultado que ele têm apresentado. Têm uma startup em fase inicial e quer mostrar a sua ideia para o Brasil inteiro? Quer receber em seu e-mail as últimas startups brasileiras? Entra lá em <a href="http://www.listabeta.com.br" target="_blank">www.listabeta.com.br</a> e se cadastra! Vai ser muito legal poder ter a sua empresa divulgada em nosso próximo e-mail.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 Dicas Essencias Para Ter Um Pitch Que Consegue Reuniões Com Investidores]]></title>
    <link href="http://codelandev.github.io/blog/2014/03/04/5-dicas-essencias-para-ter-um-pitch-que-consegue-reunioes-com-investidores/"/>
    <updated>2014-03-04T11:09:26-03:00</updated>
    <id>http://codelandev.github.io/blog/2014/03/04/5-dicas-essencias-para-ter-um-pitch-que-consegue-reunioes-com-investidores</id>
    <content type="html"><![CDATA[<p>Montar um pitch para a sua startup não é uma tarefa fácil. Por mais simples que pareça, é algo que deve ser muito bem estruturado. Seu pitch talvez poderá ser usado naquele precioso momento com um investidor em que você terá uma única chance, e investidores não investem em negócios, mas sim em uma história. Ter noção disso é o primeiro passo para começar a pensar em um pitch que não apenas captura a atenção, mas consegue reuniões. Com isso em mente, bolei uma pequena lista de 5 dicas que podem ser essenciais no seu sucesso.</p>

<!-- more -->




<h2>1. Seja apresentado por alguém que o investidor conheça</h2>


<p>Primeiro, de maneira nenhuma spammeie investidores com seu plano de negócios. Tente encontrar um mediador que possa lhe apresentar para investidores. Essa pessoa pode ser alguém que já tenha feito negócio com o investidor, ou simplesmente alguém que o investidor escute. A partir daí, você terá um contato muito mais qualificado, e se a pessoa que lhe apresentou for importante o suficiente para o investidor, você tem boas chances de ir para o topo da fila de reuniões dele. De forma alguma seja apresentado por alguém que o investidor não conhece.</p>

<h2>2. Você não precisa de um plano de negócios</h2>


<p>Apresentar o seu plano de negócios para um investidor pode ser tão efetivo quanto regar uma planta com refrigerante. Eles apenas não tem tempo disponível para ficar escutando vários planos de negócios, um atrás do outro. Se coloque no lugar deles. Por mais que você ache que seu plano é fantástico, a prova de erros e tenha gasto um bom tempo em cima dele para se assegurar disso, escutar alguém ditá-lo parte por parte é entediante e não empolga de nenhuma maneira.</p>

<h2>3. Faça um high concept pitch</h2>


<p>Esse tipo pitch inicial é muitas vezes ignorado ou confundido com o elevator pitch, quando na verdade, ter um high concept pitch vai tornar a elaboração de um elevator pitch muito mais fácil.</p>

<p>Um high concept pitch é uma única frase que resume a visão de sua startup. É um tipo de frase viral que pode ser usada tanto por investidores querendo contar sobre a sua ideia, quando por seus fans que queiram falar algo sobre sua empresa. Não é a mesma coisa que seu slogan, apesar de que você pode construir um que acabe se tornando um. Usar outras empresas para se expressar é completamente aceitável. O próprio high concept pitch do YouTube utiliza dessa estratégia, “Flickr for video”. O importante é manter curto, simples e direto. Segundos &ndash; não minutos. Como um bom comercial de TV ou de rádio.</p>

<h2>4. A partir do seu high concept pitch, monte um elevator pitch</h2>


<p>Ter um high concept pitch é essecianl para conseguir elaborar seu elevator pitch. É importante que um elevator pitch englobe as seguintes áreas: tração, produto, time e prova social.</p>

<p>Tração é a medida de engajamento de seus usuários no seu produto. É a parte principal de seu pitch, e onde os investidores mais irão prestar atenção. Você precisa começar a construir e a testar sua ideia com o seu mercado antes de tentar conseguir levantar dinheiro de investidores. Se parecer impossível, reduza o escopo. Coloque a sua ideia em um pedaço de papel e teste isso com seus clientes. Esse é o tipo de estatística que pode balançar investidores &ndash; Mesmo se o produto for um simples pedaço de papel. Expor o seu market fit é essencial também. Muitas vezes pessoas ignoram ou subestimam isso quando estão montando o seu canvas, o que é uma falha terrível. Nada pior do que não saber para quem você está construindo algo. Deixe claro para o investidor que você sabe.</p>

<p>Veja um exemplo de pitch que engloba todos os pontos citados acima, com comentários, retirado do livro Pitch Hacks:</p>

<p>&ldquo;Assunto: Apresentando Ning ao Blue Shirt Capital (Um assunto útil)</p>

<p>Olá [intermediário],</p>

<p>Obrigado por se oferecer para nos apresentar ao Blue Shirt Capital. [reiterando a prova social do intermediário] Eu gostaria de falar um pouco sobre a nossa empresa, Ning.</p>

<p>Rapidamente, a Ning deixa você criar sua própria rede social para qualquer coisa. De graça. Em 2 minutos. [Qual é o high concept pitch? No que o produto ajuda seu cliente? Quem é o cliente?] É tão fácil quanto iniciar um blog. Experimente em: <a href="http://ning.com.">http://ning.com.</a> [Link para o produto, vídeo ou screenshots]</p>

<p>Nós construimos o Ning para destravar as grandes ideias de pessoas de todo o mundo que querem usar essa fantástica mídia em suas vidas. [Qual o grande problema ou oportunidade?]</p>

<p>Nós temos mais de 115,000 redes criadas por nossos usuários, e nossas page views estão crescendo 10% por semana. [Tração] Nós levantamos anteriormente $44M de Legg Mason e outros, incluindo eu mesmo. [Mais tranção e prova social]</p>

<p>Antes da Ning, eu iniciei o Netscape (comprado pela AOL por $4.2B) e a Opsware (comprado pela HP por $1.6B). [Sucessos anteriores do time]</p>

<p>Os investimentos da Blue Shirt em empresas como Extensive Enterprises me parecem que eles podem ser grandes parceiros para a Ning. [Por que você está interessado nesse investidor] Nós iniciaremos reuniões com investidores na próxima semana, e eu adoraria mostrar para a Blue Shirt o que nós estamos construindo na Ning. [Chamada para ação]&#8221;</p>

<h2>5. Não peça por um NDA</h2>


<p>Investidores não assinarão um NDA (non disclosure agreements / acordos de confidencialidade), então não perca seu tempo bolando um. O seu pitch provavelmente será confidencializado entre você e o investidor, mas isso não significa que ele não possa cair nas mãos de outros investidores ou mesmo nas mãos de concorrentes. Não compartilhe informações que devem ser confidenciais.</p>

<p>Se você está buscando levantar dinheiro para sua startup com um investidor, é essencial que você tenha um pitch que o atinja da maneira correta. Seguindo essas dicas, você estará um passo a frente de outros empreendedores que não compreendem a essência de um bom pitch e de que maneira ele pode atrair pessoas chave para o seu negócio.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prefira 50% De Alguma Coisa à 100% De Nada]]></title>
    <link href="http://codelandev.github.io/blog/2014/02/24/prefira-50-percent-de-alguma-coisa-a-100-percent-de-nada/"/>
    <updated>2014-02-24T11:07:59-03:00</updated>
    <id>http://codelandev.github.io/blog/2014/02/24/prefira-50-percent-de-alguma-coisa-a-100-percent-de-nada</id>
    <content type="html"><![CDATA[<p>Recentemente eu estava lendo o livro ‘REWORK’ do Jason Fried e David Heinemeier Hanson, fundadores da 37Signals, e me identifiquei muito com um dos capítulos e que certamente tem tudo a ver com a realidade atual das pessoas que pensam em criar uma Startup. O nome do capítulo era: &lsquo;Crie meio produto, não um produto meia-boca&rsquo;.</p>

<!-- more -->


<p>Mas porque me identifiquei tanto assim com ele? Pelo simples fato de esse ser um dos principais problemas com as pessoas que chegam até nós querendo desenvolver seus MVPs. Muitas delas não sabem dizer qual o epicentro de seu produto durante a &lsquo;Semana de Descobrimento’, e por causa disso tem dificuldade de aceitar quando dizemos: nós achamos que isso não deveria fazer parte do MVP inicial.</p>

<p>Mas o que seria o epicentro da sua ideia? Fácil, pense da seguinte forma: uma barraca de cachorro-quente sem mostarda continua sendo uma barraca de cachorro-quente, certo? Este seria o epicentro da barraca de cachorro quente.</p>

<p>Parece idiota, mas quando eu assisti o filme ‘Velozes e Furiosos: Tokyo Drift’  o personagem Ham diz a seguinte frase, após ser questionado do porquê trabalha para a máfia: ’50% de alguma coisa é melhor que 100% de nada’. Aquela frase ficou gravada na minha cabeça desde então.</p>

<p>Quando se trabalha com Startups você deve ter seu MVP sendo usado o mais rápido possível, independente dele ser um serviço web ou não. Saber ter foco e saber adaptar seu produto a realidade, mesmo que isso signifique deixar 90% das funcionalidades de fora, é necessário.</p>

<p>Saiba ignorar os detalhes, ele não são relevantes no início. De nada adianta você comprar os quadros de parede de uma casa que você está construindo sem ainda ter nenhuma parede para penduralos. Os detalhes fazem diferença sim, mas apenas depois da base ser construída.</p>

<p>Ouça seus clientes sobre funcionalidades desejadas, mas não acate com prioridade tudo o que eles querem, pois se você priorizar tudo, nada vai ser prioritário, e logo sobrarão apenas os clientes que já sabem usar seu produto, não dando chance para os mais novos. Como foi citado no livro REWORK: ‘Clientes atuais podem deixar de usar seu produto, mas sempre haverá pessoas que ainda não usaram, e eles são a maioria’.</p>

<p>Lembre-se, produtos que se propõem a resolver muitos problemas geralmente não resolvem nada.</p>

<p>Dica a todos: leia o livro REWORK, ou Reinvente sua empresa, em português</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sua Ideia Vai Falhar? Conheça O Validation Board]]></title>
    <link href="http://codelandev.github.io/blog/2014/01/24/sua-ideia-vai-falhar-conheca-o-validation-board/"/>
    <updated>2014-01-24T12:02:20-02:00</updated>
    <id>http://codelandev.github.io/blog/2014/01/24/sua-ideia-vai-falhar-conheca-o-validation-board</id>
    <content type="html"><![CDATA[<p>Uma das coisas que não cansamos de falar para todos os interessados no mundo do empreendedorismo e das startups é de como é importante agregar os conceitos de lean startup em um novo negócio. A idéia central se resume em, basicamente, fazer diversos experimentos com o mínimo de esforço possível para validar o seu negócio antes de o levar adiante. É uma forma segura e responsável de iniciar um novo negócio.</p>

<!-- more -->


<p>Existem diversas ferramentas que andam lado a lado dessa metodologia e ajudam a estruturar esses negócios, uma delas é o <a href="http://www.leanstartupmachine.com/validationboard" target="_blank">Validation Board</a>. Se trata de uma ferramenta que auxilia a acompanhar seu progresso e se focar no que realmente importa para seu novo negócio ou produto. É uma maneira muito simples de descobrir se uma ideia vai funcionar ou se ela não é válida, totalmente baseada em ações rápidas.</p>

<p>Montar o Validation Board envolve diversos pontos de um negócio e também exige bastante interação humana, que é um fator essencial na concepção de qualquer ideia.</p>

<p>Para começar a usar, basta acessar <a href="http://www.leanstartupmachine.com/validationboard" target="_blank"><a href="http://www.leanstartupmachine.com/validationboard">http://www.leanstartupmachine.com/validationboard</a></a> e fazer o download gratuito do quadro (é preciso apenas pagar com um tweet). Você receberá os arquivos em seu e-mail. A partir daí, existem duas saídas: Ou você imprime como poster, ou sobe a versão online que é disponibilzada para o Google Drive, que ele se encarrega em montar o quadro para que você preencha ele online. Tendo o quadro, vamos passar para a fase de preenchê-lo.</p>

<h2>1. Hipóteses</h2>


<p>Iniciamos pelo topo, onde temos espaço para diferentes pivôs (Track Pivots). Pivôs são mudanças radicais ou não que podem acontecer durante a vida útil de um produto ou serviço. Muitas empresas mudaram completamente o seu rumo, como você pode ler em nosso post sobre as <a href="http://blog.codeland.com.br/blog/2013/10/22/as-vantagens-de-comecar-pequeno/" target="_blank">vantagens de começar pequeno</a>. Começamos definindo a nossa hipótese, temos três campos: Público alvo (Customer), Problema (Problem) e Solução (Solution). Pense em seu público alvo como um grupo de pessoas com algo em comum. Seja o mais específico que puder. “Homens de 30 a 50 anos” é ok, mas “Homens de 30 a 50 anos que gostam de tennis e de se exercitar” é melhor. O problema deve ser algo específico que o seu público alvo tem. “Pessoas não estão reciclando” não é um problema. A forma correta seria “Esquecem qual o dia da coleta seletiva”, ou “Se confundem em como dividir plásticos”. Deixamos a solução em branco por enquanto. Não vamos nos preocupar com isso agora porque cada problema tem múltiplas soluções. Se começarmos dessa maneira, podemos não perceber outra solução que seria uma oportunidade ainda melhor de resolver aquele problema.</p>

<h2>2. Experimentações</h2>


<p>Na parte inferior, temos a área de experimentações de design (Design Experiments). Na metodologia lean startup, não importa quanto dinheiro ou codigo você tenha, mas sim o quanto você pode aprender com suas suposições (e esse é um dos pilares da <a href="http://www.codeland.com.br/" target="_blank">CODELAND</a> &ndash; It’s about smart learning). Na área de suposições principais (Core Assumptions), preenchemos o quadro com suposições que acreditamos que se falharem, poderiam levar ao fracasso do negócio. Depois de definidas, mova a que você acha a que tem a maior probabilidade de falhar para a área de suposição com maior risco (Riskist Assumption). Movemos apenas uma porque queremos provar que uma delas está errada, para invalidar todo o negócio.</p>

<h3>Métodos para teste</h3>


<p>Agora que temos nossa suposição de maior risco, você deve ser perguntar qual experimento você deve fazer para provar a validade do que você escreveu. Temos três métodos para construir esses testes.</p>

<p>O primeiro é exploration, método em que você vai a rua e tenta reproduzir o problema que está tentando resolver. É algo real? Quais as maneiras de resolvê-lo? Você pode fazer entrevistas com usuários em potencial para saber a ideia deles, também. Todas essas atividades podem lhe prover dados para que você ligue os pontos na hora de bolar uma solução interessante.</p>

<p>O segundo é o pitch, onde você pede alguma coisa a seus usuários em troca de resolver o problema que eles tem. Você descobre se eles pagariam por isso. Esse pagamento pode ser de diversas maneiras, desde endereço de e-mail até dinheiro.</p>

<p>O último método é concierge, onde você entrega ao cliente o seu pitch com a menor quantidade possível de tecnologia (lembre-se: isso é diferente de entregar um MVP). A ideia é fazer com que eles fiquem realmente empolgados com o que você tem a oferecer.</p>

<h3>Critério mínimo para o sucesso</h3>


<p>Agora que você escolheu o seu método, é hora de definir o critério mínimo para o sucesso. É, basicamente, se perguntar “Como eu sei que minha experimentação foi um sucesso?”. É a mínima quantidade de validação que você precisa para continuar com esse produto ou serviço.</p>

<h2>3. Saia do prédio</h2>


<p>Então, é a hora de sair do prédio, falar com pessoas reais e botar em prática o método de teste que você definiu. Depois disso, você deve analisar se os resultados conseguem alcançar o seu critério mínimo de sucesso. Conforme os seus resultados, você move a sua suposição para o campo de validado ou invalidado. Se for invalidado, você pode fazer um pivô nas suas hipóteses e reiniciar (no topo da tabela). Se for validado, você pode iniciar os testes na sua próxima hipótese de maior risco. (importante: se você validou com os clientes errados, não está validado).</p>

<p>Usando esse quadro, você pode validar suas ideias com um custo muito baixo, e com as pessoas que realmente importam: seus futuros clientes.</p>

<p>Você já utilizou o Validation Board, ou algum quadro similar? Compartilhe suas experiências conosco!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ferramenta Que Está Ajudando Empresários a Ficarem Por Dentro Do Mundo Das Startups Brasileiras]]></title>
    <link href="http://codelandev.github.io/blog/2014/01/14/ferramenta-que-esta-ajudando-empresarios-a-ficarem-por-dentro-do-mundo-das-startups-brasileiras/"/>
    <updated>2014-01-14T11:59:31-02:00</updated>
    <id>http://codelandev.github.io/blog/2014/01/14/ferramenta-que-esta-ajudando-empresarios-a-ficarem-por-dentro-do-mundo-das-startups-brasileiras</id>
    <content type="html"><![CDATA[<p>A <a href="http://www.codeland.com.br" target="_blank">CODELAND</a> é uma empresa que trabalha diretamente com startups e empresários que se interessam pelo meio. Para essas pessoas, informação vale ouro. Isso fica muito claro quando estamos em nossa Semana de Descobrimento de projetos, onde discutimos diversos aspectos do negócio do cliente, formas de estruturar seu canvas, público alvo, etc. Nossos clientes ficam satisfeitos quando lhe mostramos algo novo ou uma perspectiva que não era clara a eles. No final, todo início de projeto feito aqui sempre remete muito a isso: transmitir informação e conhecimento.</p>

<!-- more -->


<p>Sempre sentimos falta de um local centralizado com as notícias mais importantes sobre tudo que está acontecendo no Brasil no que diz respeito a novos negócios, inovação tecnológica e social. Os grandes portais que trazem conteúdo sobre startups têm muito mais do que isso a oferecer, tornando o processo de achar notícias específicas complicado e improdutivo (quem quer ficar garimpando notícias até descobrir uma que, de fato, lhe interessa?). Tendo essa necessidade em vista, desenvolvemos em apenas dois dias o <a href="http://www.startupnews.com.br" target="_blank">StartupNews</a>, ferramenta open source para manter todos empresários e quem mais se interessa pelo hub tecnológico inovador brasileiro a par das principais notícias que estão correndo pelo país.</p>

<p>Tínhamos também outra coisa em mente. Conteúdo puro sem o fator humano não nos serve. Muita interação legal acontece nos comentários e experiências compartilhados pela comunidade, trazendo até proximidade com pessoas importantes que talvez você não tivesse acesso antes. Por isso criamos um sistema para aferventar a interação e debates entre nossos usuários. (já temos alguns bem bacanas rolando por lá!)</p>

<p>No tempo em que estamos vivendo, informação é chave. É valor. Se cadastre hoje no <a href="http://www.startupnews.com.br" target="_blank">StartupNews</a> e fique por dentro do mundo de inovação e de negócios que está acontecendo pelas suas costas no Brasil.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sim, Um Bom Código é Essencial!]]></title>
    <link href="http://codelandev.github.io/blog/2014/01/06/sim/"/>
    <updated>2014-01-06T11:50:39-02:00</updated>
    <id>http://codelandev.github.io/blog/2014/01/06/sim</id>
    <content type="html"><![CDATA[<p>Alguma vez você já escreveu algum pedaço de código ou até mesmo um projeto inteiro e se envergonhou dele? Garanto com 100% de certeza que todos os desenvolvedores, sejam eles de qual ramo forem, já escreveram código do qual se envergonham. Se você não se evergonha é porque nunca revisou seus códigos escritos no passado.</p>

<!-- more -->


<p>Certa vez em um post de James Schorr, no blog do site RubyLearning (<a href="http://www.rubylearning.com" target="_blank">www.rubylearning.com</a>), ele comparou o trabalho de um desenvolvedor com o de pessoas que trabalham com criação, mais precisamente, com o de um carpinteiro. Na comparação ele dizia o seguinte:</p>

<blockquote><p>Compare o carpinteiro que produz um gabinete para um trabalhador fabril, e o mesmo trabalhador que aperta botões que fazem com que uma máquina produza gabinetes uns iguais aos outros sem parar. Enquanto ambos experimentam algum tipo de satisfação com seus trabalhos, somente o carpinteiro aproveita satisfação duradoura.</p></blockquote>


<p>Porque? Basicamente porque a todo momento o carpinteiro tem a possibilidade de apromimorar seu trabalho e ver o quão bom ele está se tornando com o ganho de experiência, enquanto o trabalhador fabríl apenas aperta botões e deixa que máquinas executem seu trabalho, sem saber para onde está indo seu trabalho.</p>

<p>Para um desenvolvedor existem 3 estágios de aprendizado: Pré-desenvolvimento, desenvolvimento e pós-desenvolvimento. Desenvolvedores que se preocupam com a qualidade de seu código extraem o máximo de cada um desses estágios, mesmo antes de começarem a escrever qualquer linha de código.</p>

<h2>Pré-desenvolvimento</h2>


<p>Existem diversos pontos a serem abordados no pré-desenvolvimento, que no caso da CODELAND se aplicam na primeira semana de desenvolvimento, ou como nós chamamos, “semana de descobrimento”. Alguns principais foram tirados deste post (<a href="http://rubylearning.com/blog/2010/10/18/do-you-enjoy-your-code-quality/" target="_blank"><a href="http://rubylearning.com/blog/2010/10/18/do-you-enjoy-your-code-quality/">http://rubylearning.com/blog/2010/10/18/do-you-enjoy-your-code-quality/</a></a>) do James Schorr e que se encaixam perfeitamente nas metodologias adotadas pelo SCRUM e por nossa equipe:</p>

<ul>
  <li>Capte todos os requirimentos e “stories” do cliente. Escute sempre opiniões de não-desenvolvedores, você pode ficar surpreso como eles enxergam o sistema diferente de um desenvolvedor;</li>
  <li>Rejeite &#8220;deadlines&#8221; não realistas. Se você disser que pode entregar em 5 semanas sem qualidade, extenda algumas a mais e faça algo do qual irá se orgulhar de ter escrito;</li>
  <li>Se você não saber responder o “porque” de uma feature e “o que” ela impacta, nem comece a responder “como” ela será feita;</li>
  <li>Não comece a escrever código se estiver em um dia que precise fazer algo diferente a cada 10 ou 15 minutos, isso atrapalha o desenvolvimento e o raciocínio mais do que se pode imaginar.</li>
</ul>




<h2>Desenvolvimento</h2>




<ul>
  <li>Não reinvente a roda, se existe algo pronto que funciona (quase) perfeitamente, use-o e contribua pra que melhore;</li>
  <li>Antes de escrever qualquer linha de código tenha certeza de que você entendeu o que está para ser feito. Leve o tempo que for necessário;</li>
  <li>Preocupe-se com os erros que o usuário pode cometer utilizando o software. Nunca confie que eles irão fazer exatamente o que o software mostra. Se possível peça para que não-desenvolvedores utilizem antes de finalizar o release da funcionalidade;</li>
  <li>Evite adicionar tecnologias recem lançadas. Na maioria das vezes elas possuem bugs que podem prejudicar todo o andamento do projeto;</li>
  <li>Pergunte quando tiver dúvidas. Até mesmo os mais brilhantes desenvolvedores podem aprender com o trabalho de outras pessoas e criar novos modos de escrever código.</li>
</ul>




<h2>Pós-desenvolvimento</h2>




<ul>
  <li>Revise seu código, melhore velocidade, segurança, estabilidade e usabilidade;</li>
  <li>Discuta com outros desenvolvedores se o que você fez é bom;</li>
  <li>Revise códigos passados e compare com os de agora. Isso servirá para medir o quanto você progrediu.</li>
</ul>




<h2>Dicas</h2>


<ul>
  <li>Gosta de ouvir música enquanto escreve código? Ótimo, então ouça, um desenvolvedor feliz escreve código melhor naturalmente do que um estressado;</li>
  <li>Use a ferramenta que você melhor sabe utilizar, e não aquele que é apenas mais barata ou coisa assim;</li>
  <li>Tenha intervalos de descanso. Utilize técnicas como o <a href="http://blog.codeland.com.br/blog/2013/11/03/dica-de-produtividade-a-tecnica-do-pomodoro/" target="_blank">Pomodoro</a>;</li>
  <li>Descansee se alimente corretamente. Saúde é também sinônimo de produtividade;</li>
  <li>Não consegue se focar na solução estando na frente do computador? Levante e caminhe, tome um pouco de ar, faça algo diferente, é incrível como achamos soluções para nossos problemas quando paramos de pensar nelas por alguns intantes;</li>
  <li>Marque tempos de entrega realístas. Antes de dizer pro seu chefe ou cliente que faz em uma semana, adicione alguns dias, e faça algo realmente bom;</li>
  <li>Conheça seus limites e deixe-os bem claros, “Não, eu não vou reeinvetar o Google”.</li>
</ul>


<p>Esses são alguns dos pontos mais importantes quando se está desenvolvendo software para nós da CODELAND, e que sem dúvida garantem uma melhora significativa no ânimo das pessoas envolvidas, nos prazos de entrega e principalmente na qualidade dos serviços oferecidos. Temos certeza de que se pelo menos 50% do que foi sugerido aqui seja seguido, você como desenvolvedor já notará uma diferença significativa.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[O Que Realmente é Ser Um “Empreendedor”?]]></title>
    <link href="http://codelandev.github.io/blog/2013/12/14/o-que-realmente-e-ser-um-empreendedor/"/>
    <updated>2013-12-14T11:47:43-02:00</updated>
    <id>http://codelandev.github.io/blog/2013/12/14/o-que-realmente-e-ser-um-empreendedor</id>
    <content type="html"><![CDATA[<p>É uma pergunta curiosa, uma das que certamente tem milhares de possíveis respostas. Você sabe o que é ser um Empreendedor? Sabe as qualificações e atitudes de um verdadeiro? Você já atua como um em sua própria empresa? Ótimo, provavelmente você está perto de se tornar um, ou talvez até seja, mesmo não possuindo sua própria empresa.</p>

<!-- more -->


<p>Ser um Empreendedor é muito mais do que apenas fundar o próprio negócio, sendo ele de sucesso ou não. Ser um Empreendedor é ter paixão por aquilo em que trabalha, com sede de conhecimento e principalmente, com vontade de tirar suas ideias do papel. Empreender não está ligado exclusivamente a fazer lucros, nem a nenhum cargo dentro de alguma empresa, ou quem sabe ainda a algum título que você venha a ganhar por méritos. Ser um Empreendedor é um estado de espírito e de atitude. Está ligado diretamente a amar o que se faz e dar 100% de sí para aquilo dar certo, seja isso o que quer que for. Existem diversas qualidades que um Empreendedor precisa ter, e algumas delas são:</p>

<ul>
  <li>Ter paixão por aquilo que faz;</li>
  <li>Não ficar lamentando pelo fracasso, mas aprender com ele;</li>
  <li>Organizado e determinado;</li>
  <li>Ter foco em fazer suas ideias darem certo;</li>
  <li>Usar a imaginação para contornar momentos de dificuldade a fim de alcançar o objetivo final;</li>
</ul>


<p>Essas são algumas das diversas qualidades que um empreendedor de verdade costuma possuir, mas que nós da CodeLand consideramos como as mais importantes dentro da nossa empresa, e por isso estamos sempre a procura de novas experiências e de melhorias na forma de executar os projetos de nossos clientes e até mesmo os nossos próprios.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lightweight Sinatra Website + Octopress Blog]]></title>
    <link href="http://codelandev.github.io/blog/2013/11/24/lightweight-sinatra-website-plus-octopress-blog/"/>
    <updated>2013-11-24T11:34:12-02:00</updated>
    <id>http://codelandev.github.io/blog/2013/11/24/lightweight-sinatra-website-plus-octopress-blog</id>
    <content type="html"><![CDATA[<h3>Octopress</h3>


<p>Você já ouviu falar do <a href="http://octopress.org/" target="_blank">Octopress</a>? Ele é um pequeno framework feito para o <a href="http://jekyllrb.com/" target="blank">Jekyll</a>, que gera de maneira estática um blog pronto para você sair usando. Apesar de enxuto, é bastante poderoso. Além de todo suporte para as principais redes sociais já imbutido, ele conta com diversos plugins diferentes, como áreas de código, gerador de categorias, exibição de gists do Github nos posts, e muitas outras funcionalidades bacanas.</p>

<!-- more -->


<p>Porém, não é feito para qualquer um. É um sistema de blog de hackers para hackers. No Octopress, não existe interface administrativa, como no WordPress, por exemplo. Todos os comandos vão ser rodados por você via linha de comando, e as configurações serão feitas editando alguns arquivos padrões gerados por ele. Até mesmo a criação de um novo post é feita pela linha de comando. Então saiba onde vocês está entrando.</p>

<h3>Sinatra</h3>


<p><a href="http://www.sinatrarb.com/">Sinatra</a> é uma <a href="http://en.wikipedia.org/wiki/Domain-specific_language" target="_blank">DSL</a> criada para que rapidamente possamos criar aplicações web em Ruby com o mínimo de esforço. Bem menos poderoso que o Rails, serve bem para websites de duas páginas ou menos. Sempre costumo a fazer sites estáticos usando ele.</p>

<h3>Juntando os dois</h3>


<p>Recentemente me deparei com um pequeno problema ao querer colocar um blog gerado pelo Octopress em um subdiretório de uma aplicação rodando Sinatra (<a href="http://meuwebsite/blog,">http://meuwebsite/blog,</a> por exemplo). Resolvi criar um pequeno tutorial para que você também possa usufruir da combinação dessas duas ferramentes fantásticas, que vão manter seu diretório de trabalho limpo e deixar seu site bastante leve.</p>

<p>Primeiro, você precisa criar seu blog através do Octopress. Siga as instruções contidas <a href="http://octopress.org/docs/setup/" target="_blank">nessa página</a>.</p>

<p>Depois disso você já tem seu blog funcionando. Mas nós precisamos fazer algumas alterações nas configurações. Afinal, queremos que o nosso blog seja acessível através da página <a href="http://example.com/blog.">http://example.com/blog.</a> Altere os seguintes arquivos que foram gerados:</p>

<figure class='code'><figcaption><span>config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">destination</span><span class="p">:</span> <span class="kp">public</span><span class="o">/</span><span class="n">blog</span>
</span><span class='line'><span class="ss">url</span><span class="p">:</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//ex</span><span class="n">ample</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">blog</span>
</span><span class='line'><span class="n">subscribe_rss</span><span class="p">:</span> <span class="sr">/blog/</span><span class="n">atom</span><span class="o">.</span><span class="n">xml</span>
</span><span class='line'><span class="ss">root</span><span class="p">:</span> <span class="sr">/blog</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>config.rb - para Compass & Sass</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">http_path</span> <span class="o">=</span> <span class="err">“</span><span class="o">/</span><span class="n">blog</span><span class="err">”</span>
</span><span class='line'><span class="n">http_images_path</span> <span class="o">=</span> <span class="err">“</span><span class="o">/</span><span class="n">blog</span><span class="o">/</span><span class="n">images</span><span class="err">”</span>
</span><span class='line'><span class="n">http_fonts_path</span> <span class="o">=</span> <span class="err">“</span><span class="o">/</span><span class="n">blog</span><span class="o">/</span><span class="n">fonts</span><span class="err">”</span>
</span><span class='line'><span class="n">css_dir</span> <span class="o">=</span> <span class="err">“</span><span class="kp">public</span><span class="o">/</span><span class="n">blog</span><span class="o">/</span><span class="n">stylesheets</span><span class="err">”</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>Rakefile.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">public_dir</span> <span class="o">=</span> <span class="err">“</span><span class="kp">public</span><span class="o">/</span><span class="n">blog</span><span class="err">”</span>
</span><span class='line'><span class="c1"># Se você está fazendo deploy com rsync, troque o caminho do Rakefile</span>
</span><span class='line'><span class="n">document_root</span> <span class="o">=</span> <span class="err">“</span><span class="o">~</span><span class="sr">/yoursite.com/</span><span class="n">blog</span><span class="err">”</span>
</span></code></pre></td></tr></table></div></figure>


<p>Uma vez feito isso, agora temos o blog no caminho que desejamos, /blog. Vá no terminal e execute o comando “rake generate preview”. Isso vai fazer com que o blog seja gerado e que um servidor seja iniciado para que você possa testar localmente. Vá até seu browser e tente acessar “localhost:4000/blog”. Você deve ver seu blog rodando.</p>

<h3>Agora vamos criar nossa aplicação Sinatra.</h3>


<p>Para começar nosso projeto, primeiro você deve instalar o Sinatra e o Thin, caso não o tenha feito ainda.</p>

<p>gem install sinatra<br>
gem install thin</p>

<p>Feito isso, vamos criar uma pasta onde nosso website vai ficar. Dentro dele, crie um arquivo chamado site.rb, com o seguinte conteúdo:</p>

<figure class='code'><figcaption><span>site.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="err">‘</span><span class="n">sinatra</span><span class="err">’</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="err">‘</span><span class="o">/</span><span class="err">’</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">redirect</span> <span class="err">‘</span><span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="err">’</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como podem ver, estamos chamando um arquivo chamado index.html, que ainda não criamos. Dentro da raiz do nosso projeto, crie uma pasta chamada public, e dentro dela crie o index.html. Esse será o arquivo html do seu site enxuto, landing page, ou qualquer que seja a sua intenção. Se você rodar “ruby site.rb” no console, esse arquivo estará acessível pelo browser através do endereço “localhost:4567”.</p>

<h3>A parte final: integrando o blog gerado com o aplicativo Sinatra que criamos.</h3>


<p>Dentro da pasta onde geramos nosso blog, vá até a pasta /public e copie a pasta chamada blog. Cole ela em nosso projeto Sinatra, dentro da pasta /public. Feito isso, edite o arquivo site.rb e adicione essas linhas no final do arquivo:</p>

<figure class='code'><figcaption><span>site.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span><span class="p">(</span><span class="sr">/.+/</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">send_sinatra_file</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="p">)</span> <span class="p">{</span><span class="mi">404</span><span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">not_found</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">send_file</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="err">‘</span><span class="kp">public</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="mi">404</span><span class="o">.</span><span class="n">html</span><span class="err">’</span><span class="p">),</span> <span class="p">{</span><span class="ss">:status</span> <span class="o">=&gt;</span> <span class="mi">404</span><span class="p">})</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">send_sinatra_file</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">missing_file_block</span><span class="p">)</span>
</span><span class='line'>  <span class="n">file_path</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="err">‘</span><span class="kp">public</span><span class="err">’</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>
</span><span class='line'>  <span class="n">file_path</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="err">‘</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="err">’</span><span class="p">)</span> <span class="k">unless</span> <span class="n">file_path</span> <span class="o">=~</span> <span class="sr">/.[a-z]+$/i</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span> <span class="p">?</span> <span class="n">send_file</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span> <span class="p">:</span> <span class="n">missing_file_block</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Vá ao terminal e dentro da pasta do projeto Sinatra execute “ruby site.rb”. Agora acesse através do seu browser a página “localhost:4567/blog” e você terá seu blog rodando em um subdiretório do seu projeto Sinatra. Se você entrar em “localhost:4567”, verá o arquivo HTML da sua página.</p>

<p>Criei um pequeno aplicativo para mostrar como funciona depois de pronto. Você pode acessá-lo no GitHub através <a href="https://github.com/brunopazzim/sinatra-octopress-demo" target="_blank">desse link</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dica De Produtividade - a Técnica Do Pomodoro]]></title>
    <link href="http://codelandev.github.io/blog/2013/11/03/dica-de-produtividade-a-tecnica-do-pomodoro/"/>
    <updated>2013-11-03T11:14:06-02:00</updated>
    <id>http://codelandev.github.io/blog/2013/11/03/dica-de-produtividade-a-tecnica-do-pomodoro</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://codelandev.github.io/images/pomodoro.jpg">
Com a correria do dia a dia, juntando nosso fluxo de trabalho com os bombardeios de e-mails e notificações dos aplicativos que usamos, é comum que não consigamos manter o foco necessário para completar uma tarefa em um curto período de tempo. Distrações, barulhos, conversas, aplicativos, um browser aberto esperando para nos levar a qualquer canto da internet. Tudo isso joga contra o nosso poder de concentração em uma tarefa.</p>

<!-- more -->


<p>Como programadores, sempre tentamos buscar metodologias e técnicas que façam nossa produtividade subir, para que possamos fazer mais com menos. (O <a href="http://blog.codeland.com.br//blog/2013/10/22/as-vantagens-de-comecar-pequeno/" target="_blank">ágil</a> prega muito disso). Foi numa dessas buscas que  encontrei a técnica do Pomodoro.</p>

<p>A premissa é muito simples: ela tem o foco em trabalhar no seu foco. Isso mesmo. É um sistema funcional de controle de tempo que mantém você trabalhando nas coisas importantes e nada mais. Fácil de explicar:</p>

<ol>
  <li>Tenha uma tarefa a fazer</li>
  <li>Coloque um timer para 25 minutos (e quando digo timer, pode ser qualquer coisa mesmo. Desde timers de cozinha e despertadores analógicos até aplicativos feitos especialmente para isso. Falo deles logo mais).</li>
  <li>Trabalhe com total foco durante esses 25 minutos, sem parar para pequenas distrações</li>
  <li>Quanto o tempo chegar ao fim, tire uma folga de 5 minutos. Levante, se estique, beba água, saia do ambiente em que você estava trabalhando</li>
  <li>Repita os passos 1-4</li>
  <li>A cada quatro ciclos, tire 25 minutos de folga.</li>
</ol>


<p>É realmente muito simples, e pode fazer uma diferença enorme. O fato de você dedicar um curto espaço de tempo em que se encontra totalmente focado em algo tem um grande poder. Já li sobre pessoas que completaram em um ou dois pomodoros (1 pomodoro = 25 minutos focados) o trabalho que levariam um dia inteiro para terminar. Faço uso dessa técnica principalmente quando preciso estudar para algo. É realmente impressionante como você consegue reter mais informações no cérebro por meros 5 minutos de parada a cada período mais longo.</p>

<p>Porém, não costuma a ser nada fácil se acostumar a usar pomodoros para completar suas tarefas. Talvez você não tenha noção do quanto se desligar do mundo por 25 minutos pode ser difícil. Para facilitar, devemos desativar qualquer notificação de aplicativos que usamos no computador e principalmente no celular (o meu costumava a vibrar sem parar). Talvez até mesmo desligar o celular possa ser uma boa alternativa, para você definitivamente aguentar a tentação de dar uma checada rápida nos seus e-mails.</p>

<p>O mais bacana dessa técnica é que ela não requer nenhum aplicativo especial. Pode ser feita em qualquer lugar que você tenha um relógio e precise terminar algo. Mas como é bastante conhecida, existem alguns aplicativos para que você possa fazer pomodoros, manter histórico disso, e ainda trazem algumas features mais avançadas. Listo aqui alguns:</p>

<p><a href="https://itunes.apple.com/br/app/easy-pomodoro/id543027701?mt=12" target="_blank">Easy Pomodoro (Mac)</a> &ndash; $2.99
É a minha escolha quando se trata de usar a técnica do Pomodoro. Aplicativo simples para cronometragem com interface intuitiva. Basta olhar para saber como usar. Você pode assistir os pomodoros acumulando conforme vai completando ciclos, assim ele te dá noção do quanto já trabalhou em determinadas tarefas.</p>

<p><a href="http://www.pomodoroapp.com/" target="_blank">PomodoroApp (Mac, Windows, Linux)</a> &ndash; Freemium
Muito mais do que um contador de tempo, esse aplicativo engloba gerenciamento de projetos e tarefas, além de algumas outras features.</p>

<p><a href="https://itunes.apple.com/gb/app/pomodoropro/id340156917?mt=8" target="_blank">Focus Time (antigo Pomodoro Pro, iPhone)</a> &ndash; $2.99
Aplicativo para iPhone que traz o timer em uma interface bem bacana. Ele também lhe apresenta gráficos e estatísticas dos pomodoros já completados.</p>

<p><a href="https://itunes.apple.com/br/app/simple-pomodoro-timer/id496191025?mt=8" target=_blank">Simple Pomodoro Timer (iPhone)</a> &ndash; Free
O Simple Pomodoro Timer não tras nada mais do que o contador dos 25 minutos e um alerta quando esse tempo chega ao fim. Alternativa grátis para quem quer usar um iPhone para a cronometragem.</p>

<p><a href="http://www.ebay.com/itm/Best-msy-New-Quality-Novelty-Cooking-Tomato-60-Minute-Kitchen-Timer-stainless-/380646258999?pt=LH_DefaultDomain_0&hash=item58a048f937" target="_blank">Tomato Kitchen Timer</a>
Se você quiser algo mais analógico, e… bem, a intenção é mostrar que realmente qualquer timer vai fazer seu pomodoro funcionar!</p>

<p>DICA 1: Escutar música com headphones durante o pomodoro pode ajudar consideravelmente. :)</p>

<p>DICA 2: Não se sinta pressionado com o limite de 25 minutos. Um pomodoro não tem de ser feito necessariamente para completar uma tarefa inteira. Existem tarefas que podem tranquilamente ser feitas em três ou quatro pomodoros, por exemplo. Lembre-se: É uma maneira de você manter o foco e trabalhar no que é importante, não um motivo para você atropelar o seu trabalho.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Função Das Palavras]]></title>
    <link href="http://codelandev.github.io/blog/2013/10/26/a-funcao-das-palavras/"/>
    <updated>2013-10-26T04:20:12-02:00</updated>
    <id>http://codelandev.github.io/blog/2013/10/26/a-funcao-das-palavras</id>
    <content type="html"><![CDATA[<p>Muitas empresas hoje se importam cada vez mais com a estética de seus websites, e acabam se deixando pecar pela falta de foco e falta de padrão no conteúdo.</p>

<p>Em todos os níveis, palavras podem, quando usadas em consideração como parte do processo de design, ajudar e melhorar a experiência do usuário, o deixando mais contente e decidido com a visita no website.</p>

<!-- more -->


<p>Grandes empresas como a Apple se importam muito com isso,  livrando de qualquer linguagem técnica para usar uma linguagem cotidiana, que se conecta aos seus usuários da maneira mais fácil. Enquanto outras empresas se preocupam em bombardear os usuários com especificações técnicas nas suas headlines, a Apple tem uma aproximação mais humana. O resultado são frases memoráveis, cuidadosamente estruturadas. Um exemplo é o slogan do iPod: “1000 músicas no seu bolso”, enquanto a concorrência segue outra linha: “Uma grande capacidade de armazenamento e um design compacto.” Não preciso dizer qual é que fez mais sucesso, não é?</p>

<p>Empresas como o MailChimp vão ainda mais longe e, se você trabalha com eles e quer escrever algo para os usuários, tem de estar ciente que existe guia sobre como abordar temas: Quais palavras são comumente mais usadas, qual o sentimento de cada usuário ao acessar certa parte do website. Eles tem uma página chamada <a href="http://voiceandtone.com/" target="_blank">Voice and Tone</a> (recomendo a leitura dos guias, é uma ótima referência) para deixar muito claro a importância que eles dão as palavras. Como claramente dizem na página:</p>

<p>&ldquo;Antes de escrever conteúdo para o MailChimp, é importante conhecer nossos leitores. Apesar de nossa voz não mudar, nosso tom se adapata aos sentimentos de nossos usuários. Esse guia interativo vai lhe mostrar como isso funciona.&rdquo;</p>

<h2>Tom e Voz</h2>


<p>Nada pior do que ter uma visão diferente de um website a cada página acessada. Na home page você é sério. Na FAQ, assume um tom que me faz rir. Na página de porfólios, a seriedade volta. Isso tudo deixa o usuário confuso quanto a qual sentimento ter. Escolher um tom que deve ser usado com a dosagem certa em cada página é muito importante.</p>

<p>Para chegar a um consenso de qual postura se deve adotar onde vamos escrever, o ideal é primeiro ter em mente os valores da empresa. Somos sérios? Descontraídos? Queremos atrair os olhos de grandes empresas ou freelancers? Isso tudo interfere na maneira de aproximação com o usuário.</p>

<p>Depois de definido os valores, muitas empresas (principalmente agências publicitárias) adotam a solução de criar um banco de palavras. Um lugar onde ficam as palavras mais usadas em certas campanhas, e as que definem a identidade da empresa. Se muitas pessoas revezam o trabalho de escrever, isso é uma ótima solução para manter o tom consistente.</p>

<p>Nos projetos da <a href="http://www.codeland.com.br" target="_blank">CODELAND</a> sempre damos atenção especial aos textos que usamos em nossos projetos, e nunca começamos um desenho com lorem ipsum. Desde os primeiros passos do projeto nos envolvemos com o uso do tom certo, que define o cliente.</p>

<p>No fim, as palavras são tão importante visualmente quanto o desenho em si. Quando bem estruturadas, casam com o design, criando uma experiência acima do normal para o usuário. Desenho e palavras se tornam um só.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[As Vantagens De Começar Pequeno]]></title>
    <link href="http://codelandev.github.io/blog/2013/10/22/as-vantagens-de-comecar-pequeno/"/>
    <updated>2013-10-22T06:58:37-02:00</updated>
    <id>http://codelandev.github.io/blog/2013/10/22/as-vantagens-de-comecar-pequeno</id>
    <content type="html"><![CDATA[<p>Existe um conceito de desenvolvimento de projetos em geral que tende a não ser seguido pelo mercado brasileiro. A Grande maioria dos empreendedores daqui parece não saber de algo importante: A sua idéia milionária na verdade não vale nada.</p>

<!-- more -->


<p>O que agrega valor a uma idéia são as pessoas que estão por trás dela, e a forma que a aplicação soluciona um problema existente. Quando descobrimos algum produto ou serviço está fazendo sucesso na web, não é incomum nos depararmos pensando “Putz, por quê eu não fiz isso antes?”. A questão é: Será que ele teria esse sucesso, se você fosse o responsável pela idéia? Talvez não. Ou quem sabe seria ainda mais bem sucedido. São as pessoas fazem toda a diferença no sucesso ou no fracasso de uma idéia.</p>

<p>Cada vez mais surgem empreendedores no Brasil com idéias para serem testadas na web. Essa “startup fever” que já acontece nos Estados Unidos e em alguns pontos da Europa há algum tempo está cada vez mais perto daqui. O problema é que, em maior parte, a nossa realidade de empresas de tecnologia no Brasil hoje não mudou da que tínhamos há 4 ou 5 anos atrás. Empresas desenvolvem projetos supervalorizados, “super alongados” e com escopo totalmente fechado. São projetos feitos em moldes antigos para novos tempos. Empreendedores desavisados acreditam que só com um produto completo vão conseguir chamar a atenção no meio de tantos outros. Eles desconhecem ou subestimam as vantagens de começar pequeno.</p>

<p>Começar pequeno não significa começar medíócre. Não confunda um produto enxuto, que faz muito bem o que propõe, com aquele feio e mal feito. Nós chamamos esse tipo de produto de MVP, Minimum Viable Product, ou Produto Mínimo Viável. Tenho trabalhado bastante focado no desenvolvimento de MVPs, e tenho me inteirado bastante desses primeiros passos de um empreendimento na web.</p>

<p>Ter um MVP significa ter um produto com o mínimo de funcionalidades possíveis para recolher o máximo de feeback dos seus usuários. Desenvolver o core da sua idéia e lançar para o mundo o quanto antes. Nada de desenvolver um projeto de 2, 3 ou 6 meses (isso se não se extender para um ano) com 30 funcionalidades distintas e lançar. Não é bem melhor começar com um projeto feito em dias ou semanas, lançar logo e descobrir sobre ele com seus usuários? Você pode lançar um produto que guarda uma coleção de livros, e então descobrir na primeira semana depois do lançamento que na verdade os usuários querem colecionar músicas. Melhor aprender isso logo de cara, ao invés de só descobrir quando você lançar o sistema que coleciona livros, jornais, revistas e editoriais.</p>

<h2>Razões</h2>


<p>Eu poderia fazer um post inteiro só citando as vantagens que são trazidas ao começar dessa maneira, mas vou me deter em apenas algumas:</p>

<ul>
  <li>Curto tempo de desenvolvimento: Desenvolver um produto enxuto custa muito menos tempo do que um produto completo. Você pode lançar com rapidez e colher o máximo de feedback que conseguir.</li>
  <li>Pivotar: É o ato de mudar a direção do seu negócio se baseando em feedback colhido dos usuários. Você estava fazendo um serviço de encontro online com streaming de vídeo, quando descobre que na verdade os usuários do seu aplicativo usam ele para gravar músicas e compartilhar com seus amigos. Hora de pivotar e mudar o rumo do empreendimento.</li>
  <li>Construção do aplicativo com o que é realmente importante para os usuários:Lançando enxuto e colhendo feedback constante, você vai ter a certeza de que as próximas features desenvolvidas serão as que realmente fazem falta para o usuário. É como se você construísse um sistema com uma base sólida, sabendo o que precisa ser feito. Se você desenvolver um projeto em 6 meses e lançar ele completo, não vai saber se as features que estão lá realmente fazem sentido. O que é essencial para você talvez não seja tão importante assim para o usuário, que é quem será seu cliente, no final.</li>
  <li>Investidores: Encontrar alguém disposto a investir no seu produto é muito mais viável dessa maneira. Ao invés de mostrar o seu negócio e um plano de desenvolvimento longo e burocrático, você mostra seu MVP online, já funcionando e com usuários ativos. Além disso, imagine o cenário: você solucionou um problema, lançou seu aplicativo no mercado e recebe os primeiros feedbacks de usuários e de potenciais investidores. Se a idéia não for bem recebida pelo mercado, ainda há tempo para pivotar ou começar algo novo do 0. Evita a frustração de você ver um projeto que lhe tomou um grande período de tempo fracassando.</li>
</ul>




<h2>Mundo real</h2>


<p>Você não tem como ter certeza que a sua idéia será bem recebida. Isso é certo. Talvez você a mude completamente, e pouco tempo depois de lançar.</p>

<p><img class="center" src="http://codelandev.github.io/images/twitter-post.png">
O Twitter, por exemplo, começou como algo que era definido como “envio de sms para grupos de pessoas”.</p>

<p><img class="center" src="http://codelandev.github.io/images/youtube.jpg">
A primeira versão do YouTube até lembra a rede social gigante dos vídeos que temos hoje. Mas se olhar bem a imagem, vai ver que a busca era um tanto diferente. Você não procurava vídeos, mas sim pessoas. Pessoas para marcar encontros. Bem diferente do que é hoje, não é?</p>

<p>Exemplos de grandes sites como esses servem de inspiração para nós. Nenhuma idéía deve ser tomada como garantida. Pode ser que seja necessário aceitar que uma funcionalidade que achamos crucial para o sistema não seja importante assim, ou que algo não vai dar certo. Começando pequeno, temos a certeza de que podemos nos tornar grandes da maneira certa: sempre construindo nos baseando nas necessidades dos nossos usuários. Além disso, temos a segurança de que se for necessário mudar (até mesmo radicalmente), podemos fazer de forma rápida e sem grande impacto.</p>

<p>Lembre-se: Menos é mais.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eu Também Pensava "Como Alguém Consegue Gostar Do VIM?"]]></title>
    <link href="http://codelandev.github.io/blog/2013/10/14/eu-tambem-pensava-como-alguem-consegue-gostar-do-vim-slash/"/>
    <updated>2013-10-14T04:41:35-03:00</updated>
    <id>http://codelandev.github.io/blog/2013/10/14/eu-tambem-pensava-como-alguem-consegue-gostar-do-vim-slash</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://codelandev.github.io/images/vim.jpg"></p>

<p>Mas não me sinto culpado. Acho que a maioria das pessoas que vê pela primeira vez acha isso, não é?</p>

<p>Sejamos sinceros, o VIM é um editor de texto diferente dos convencionais. Não é como se você tivesse um menu na barra superior te contando todos os atalhos principais do programa.</p>

<!-- more -->


<p>Vim (usar essa palavra em um texto sobre sobre VIM realmente não ajuda) de um mundo onde usar o TextMate era uma coisa fantástica. Meus professores na universidade, quando me viam usando um Macbook, costumavam a dizer que eu poderia tranquilamente desenvolver os trabalhos das cadeiras de programação no TextMate ao invés da IDE de preferência deles, tamanho o gosto deles pelo editor. Pois bem, assim o mundo girava e eu era contente. Até que iniciei em meu emprego anterior.</p>

<p>Logo que iniciei, vi que um dos meus colegas usava o tal editor dos comandos infinitos, impossível de ser entendido por alguém que apenas observa o fluxo de trabalho comum nele. Long story short: comecei a ter inveja de como ele podia dividir a tela em quantos painéis quisesse com uma facilidade absurda (hoje, usando só o VIM, eu nem tenho tanto costume assim de dividir a tela, mas caramba, aquilo era legal), e uma apresentação curta feita por ele (que pode ser encontrada <a href="https://speakerdeck.com/irio/vim-101" target="_blank">aqui</a>) foi o suficiente para eu ter vontade de usar.</p>

<p>A verdade é que não sei dizer se o VIM é melhor e mais produtivo do que o TextMate ou qualquer outro editor, acho que é uma escolha muito pessoal. Mas o que posso dizer é que com uma semana usando o primeiro, larguei o TextMate depois de usar só ele por dois anos.</p>

<p>Mas, por quê a troca?</p>

<ul>
  <li> Comandos do bash imbutidos no editor</li>
  <li> Dividir a tela em painéis (hell yea)</li>
  <li> CTags</li>
  <li> Ampla comunidade usando, muitos plugins disponíveis</li>
  <li> Depois que você encontra seu caminho no VIM, existe um ganho de produtividade (ao menos pra mim foi dessa maneira)</li>
</ul>


<p>A parte ruim é que a curva de aprendizado dele é bastante complicada. Coisas <a href="http://michael.peopleofhonoronly.com/vim/vim_cheat_sheet_for_programmers_colorblind.png" target="_blank">como essa</a> podem assustar. Mas dá pra imaginar o que você consegue, e mais importante, com a rapidez que você consegue fazer, sabendo só alguns desses comandos?</p>

<p>Se você é desenvolvedor e pensa em trocar de editor, dê uma chance pro VIM. Se depois de uma semana sentir que a coisa realmente não flui, talvez seja melhor outra opção. Mas se ficar aquele gosto de “quero e posso mais com ele”, então bem vindo a bordo.</p>

<p>Três links que me ajudaram no processo de migração:</p>

<p><ul>
  <li><a href="http://blog.danielfischer.com/2010/11/19/a-starting-guide-to-vim-from-textmate/" target="_blank">A Starting Guide From TextMate to VIM</a></li>
  <li><a href="https://github.com/akitaonrails/vimfiles" target="_blank"> VimFiles do Fábio Akita (apesar de descontinuado, em minha opnião continua sendo a melhor pacote de plugins pro VIM)</a></li>
  <li><a href="https://speakerdeck.com/irio/vim-101" target="_blank"> vim 101 (apresentação já linkada no post acima)</a></li></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Um Tempo Em Que O PSD Não é Mais Lei]]></title>
    <link href="http://codelandev.github.io/blog/2013/09/22/um-tempo-em-que-o-psd-nao-e-mais-lei/"/>
    <updated>2013-09-22T05:27:14-03:00</updated>
    <id>http://codelandev.github.io/blog/2013/09/22/um-tempo-em-que-o-psd-nao-e-mais-lei</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://codelandev.github.io/images/psd.jpg"></p>

<p>Será que os dias do nosso velho conhecido PSD com um website inteiro estão contados?</p>

<p>Me surpreendi recentemente, quando li sobre algo que não achava que era tão conhecido: o desenvolvimento do layout de um website diretamente no código, sem nenhum editor gráfico para montar a estrutura. Encontrei vários artigos sobre, o suficiente pra acreditar que essa técnica já está sendo bem adotada. Parei pra pensar no porquê cada vez mais pessoas vem adotando essa aproximação ao webdesign.</p>

<!-- more -->


<p>Pois bem, o comum de hoje em dia é ver os designers fazerem os seus rascunhos e depois partirem direto para o editor de imagens carro-chefe da Adobe. É claro que pode parecer bem convidativo ter todo o poder e a facilidade que ele nos dá na hora de desenhar algo, ao invés de sair montando html e css. Mas sejamos sinceros, isso está bem longe da nossa realidade de trabalho de hoje.</p>

<p>Nós queremos coisas prontas com agilidade, e parte da agilidade significa cortar passos que trancam o projeto, enquanto algo poderia estar sendo produzido. Já vi diversas vezes isso acontecer: designer começa o esboço do projeto, e então passa para o PSD. Pixel pra lá, forma pra lá, hora de mostrar ao cliente. Insatisfeito com algum dos aspectos, o desenho do website volta e o designer faz o seu trabalho, altera o necesário até que se chegue em um acordo. Só depois dessa aprovação final o projeto é iniciado pelos desenvolvedores.</p>

<p>Se hoje temos ferramentas como o <a href="http://getbootstrap.com/" target="_blank">Bootstrap</a> e o <a href="http://www.divshot.com/" target="_blank">Divshot</a>, que nos proporcionam o setup de uma estrutura básica, já com código, feita em questão de minutos, pra que perder tempo fazendo exatamente a mesma coisa no Photoshop primeiro? É incrível como o ganho de tempo parece evidente dessa maneira.</p>

<p>É claro, o Photoshop ainda é o software em estado da arte para desenvolvimento de peças gráficas, sejam impressas ou para os meios digitais. O ponto é, naturalmente esse software foi trazido para o campo do web design e mantido lá por muito tempo. Talvez agora seja a hora de deixarmos o uso dele para o propósito original. Lembre-se de considerar e de usar as ferramentas certas que você tiver, mas saiba quando alguma dessas ferramentas deixa de fazer sentido.</p>
]]></content>
  </entry>
  
</feed>
